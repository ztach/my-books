{"version":3,"sources":["webpack:///./src/components/PageInfo/PageInfo.js","webpack:///./src/components/BookPreview/BookPreview.js","webpack:///./src/pages/booksArticle.js"],"names":["Wrapper","styled","div","PageInfo","title","paragraph","dangerouslySetInnerHTML","__html","PreviewWrapper","Link","PreviewInfoLabel","theme","fontSize","xxxs","StyledImage","img","cover","BookPreview","image","slag","to","StyledWrapper","query","BooksArticlePage","data","nodes","allDatoCmsBook","allDatoCmsBookarticle","description","map","author","id","okladka","key"],"mappings":"6FAAA,yBAGMA,EAHN,UAGgBC,EAAOC,IAAV,uEAAGD,CAAH,kHAuBEE,IAPE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,OACf,kBAACL,EAAD,KACE,4BAAKI,GACL,uBAAGE,wBAAyB,CAAEC,OAAQF,Q,0FCjBpCG,EAAiBP,YAAOQ,KAAV,kFAAGR,CAAH,yEASdS,EAAmBT,IAAOC,IAAV,oFAAGD,CAAH,yLASP,qBAAGU,MAAkBC,SAASC,QASvCC,EAAcb,IAAOc,IAAV,+EAAGd,CAAH,yOAOG,qBAAGe,SAeRC,EATK,SAAC,GAAD,IAAGb,EAAH,EAAGA,MAAOc,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,OAClB,kBAACX,EAAD,CAAgBY,GAAE,iBAAmBD,GACnC,kBAACL,EAAD,CAAaE,MAAOE,IACpB,kBAACR,EAAD,KACE,4BAAKN,M,YCjDX,sCAMA,IAAMiB,EAAgBpB,IAAOC,IAAV,8EAAGD,CAAH,iGAgCNqB,EAAK,aAoBHC,UA7CU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACAC,EAAmCD,EAArDE,eAAkBD,MAASE,EAA0BH,EAA1BG,sBAEnC,OACE,kBAACN,EAAD,KACE,kBAAClB,EAAA,EAAD,CACEC,MAAOuB,EAAsBF,MAAM,GAAGrB,MACtCC,UAAWsB,EAAsBF,MAAM,GAAGG,cAG3CH,EAAMI,KAAI,YAA2C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,GAAI3B,EAA2B,EAA3BA,MAAOe,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,QACrC,OACE,kBAAC,EAAD,CACEC,IAAKd,EACLW,OAAQA,EACRC,GAAIA,EACJ3B,MAAOA,EACPe,KAAMA,EACND,MAAOc","file":"component---src-pages-books-article-js-d1fadeb1c47fef5bb2ff.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 50px 0;\r\n  max-width: 350px;\r\n\r\n  h1 {\r\n    font-size: 52px;\r\n    margin: 0;\r\n  }\r\n\r\n  p {\r\n    font-size: 18px;\r\n    font-weight: 200;\r\n    margin: 35px 0 0;\r\n  }\r\n`;\r\n\r\nconst PageInfo = ({ title, paragraph }) => (\r\n  <Wrapper>\r\n    <h1>{title}</h1>\r\n    <p dangerouslySetInnerHTML={{ __html: paragraph }} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default PageInfo;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// import Image from 'gatsby-image';\r\nimport { Link } from \"gatsby\";\r\n\r\nconst PreviewWrapper = styled(Link)`\r\n  display: black;\r\n  position: relative;\r\n  width: 80%;\r\n  height: 360px;\r\n  margin:auto;\r\n\r\n`;\r\n\r\nconst PreviewInfoLabel = styled.div`\r\n  position: absolute;\r\n  left: -35px;\r\n  min-width: 320px;\r\n  min-height: 40px;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 5px 15px;\r\n  text-align: center;\r\n  font-size: ${({ theme }) => theme.fontSize.xxxs};\r\n\r\n  h2,\r\n  p {\r\n    margin: 5px;\r\n    text-align: color;\r\n  }\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  width: 61%;\r\n  height: 81%;\r\n  border: none;\r\n  border: .5px solid hsla(100, 0%, 0%, 90.5);\r\n  margin: 0 0 0 20px;\r\n  object-fit: cover;\r\n  background: url(${({ cover }) => cover}) no-repeat;\r\n  background-size: 204px;\r\n  box-shadow: 0 10px 30px -10px hsla(100, 0%, 0%, 0.5);\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst BookPreview = ({ title, image, slag }) => (\r\n  <PreviewWrapper to={`/booksArticle/${slag}`}>\r\n    <StyledImage cover={image} />\r\n    <PreviewInfoLabel>\r\n      <h2>{title}</h2>\r\n    </PreviewInfoLabel>\r\n  </PreviewWrapper>\r\n);\r\n\r\nexport default BookPreview;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport BookPreview from './../components/BookPreview/BookPreview';\r\nimport PageInfo from './../components/PageInfo/PageInfo';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 120px 0 0 50px;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-gap: 20px 10px;\r\n`;\r\n\r\nconst BooksArticlePage = ({ data }) => {\r\n  const { allDatoCmsBook: { nodes }, allDatoCmsBookarticle } = data;\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <PageInfo\r\n        title={allDatoCmsBookarticle.nodes[0].title}\r\n        paragraph={allDatoCmsBookarticle.nodes[0].description}\r\n      />\r\n\r\n      {nodes.map(({ author, id, title, slag, okladka }) => {\r\n        return (\r\n          <BookPreview\r\n            key={slag}\r\n            author={author}\r\n            id={id}\r\n            title={title}\r\n            slag={slag}\r\n            image={okladka}\r\n          />\r\n        );\r\n      })}\r\n    </StyledWrapper>\r\n  );\r\n};\r\nexport const query = graphql`\r\n  {\r\n    allDatoCmsBook {\r\n      nodes {\r\n        author\r\n        id\r\n        title\r\n        slag\r\n        okladka\r\n      }\r\n    }\r\n    allDatoCmsBookarticle {\r\n      nodes {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BooksArticlePage;\r\n"],"sourceRoot":""}