{"version":3,"sources":["webpack:///./src/components/Modal/FaqModal.js","webpack:///./src/components/Modal/Modal.js","webpack:///./src/components/Faq/FaqDetails.js","webpack:///./src/pages/faq.js"],"names":["StyledWrapper","styled","div","FaqModal","getId","title","id","subtitle","text","dangerouslySetInnerHTML","__html","ModalWrapper","isVisible","StyledButton","button","Modal","openModal","setOpenModal","onClick","StyledBlock","FaqDetails","setData","picture","key","src","fixed","alt","query","FaqPage","nodes","data","allDatoCmsFaq","useState","setGetId","x","map","slug"],"mappings":"wIAGMA,G,UAAgBC,IAAOC,IAAV,8EAAGD,CAAH,4NAqCJE,EAZE,SAAC,GAA+C,IAAD,IAA3CC,MAAaC,GAA8B,EAAlCC,GAAkC,EAA9BD,OAAOE,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,KAE/C,OACI,kBAACR,EAAD,KACI,4BAAKK,GACL,yBAAKI,wBAAyB,CAAEC,OAAQH,KACxC,yBAAKE,wBAAyB,CAAEC,OAAQF,OC7B9CG,EAAeV,IAAOC,IAAV,0EAAGD,CAAH,kQAaO,qBAAGW,UAA6B,IAAM,UAIzDC,EAAeZ,IAAOa,OAAV,0EAAGb,CAAH,wCAiBHc,EAZD,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAAcb,EAAY,EAAZA,MAExC,OACE,kBAACO,EAAD,CAAcC,UAAWI,GACvB,kBAAC,EAAD,CACIZ,MAAOA,IAEX,kBAACS,EAAD,CAAcK,QAAS,kBAAID,GAAa,KAAxC,OC9BAjB,EAAgBC,IAAOC,IAAV,gFAAGD,CAAH,gMAwBbY,EAAeZ,IAAOa,OAAV,+EAAGb,CAAH,yPAsBZkB,EAAclB,IAAOC,IAAV,8EAAGD,CAAH,kJAwCFmB,EAxBI,SAAC,GAAmF,IAAlFH,EAAiF,EAAjFA,aAAab,EAAoE,EAApEA,MAAOiB,EAA6D,EAA7DA,QAASL,EAAoD,EAApDA,UAAWV,EAAyC,EAAzCA,GAAIE,EAAqC,EAArCA,KAAMH,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,SAAUe,EAAc,EAAdA,QAGtF,OACE,kBAAC,EAAD,CAAeC,IAAKjB,GACpB,kBAACa,EAAD,KACE,kBAAC,EAAD,CAAcD,QAAS,kBAAMG,EAAQ,CAACf,KAAGD,QAAME,WAASC,WACtD,yBAAKgB,IAAKF,EAAQG,MAAMD,IAAKE,IAAI,kBAGjC,4BAAKrB,IAGP,yBAAKI,wBAAyB,CAAEC,OAAQH,KAExC,kBAAC,EAAD,CACES,UAAWA,EACXC,aAAcA,EACdb,MAAOA,MCpFf,sCAKA,IAAMJ,EAAgBC,IAAOC,IAAV,yEAAGD,CAAH,8HA+CN0B,EAAK,aAqBHC,UAtDC,SAAC,GAA4C,IAAjBC,EAAgB,EAAzCC,KAAQC,cAAiBF,MAAgB,EACxBG,oBAAS,GAApChB,EADmD,KACxCC,EADwC,OAEhCe,mBAAS,IAA5B5B,EAFmD,KAE5C6B,EAF4C,KAIpDZ,EAAU,SAACa,GACfD,EAASC,GACTjB,GAAcD,IAGd,OACA,kBAAC,EAAD,KACE,2EAECa,EAAMM,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAM/B,EAAb,EAAaA,MAAMG,EAAnB,EAAmBA,KAAMD,EAAzB,EAAyBA,SAAUe,EAAnC,EAAmCA,QAAnC,OACR,kBAAC,EAAD,CACCC,IAAKjB,EACLA,GAAIA,EACJD,MAAOA,EACPE,SAAUA,EACVC,KAAMA,EACNc,QAASA,EACTc,KAAMA,EACNpB,UAAWA,EACXK,QAASA,EACTJ,aAAcA,EACdb,MAAOA","file":"component---src-pages-faq-js-dab3ee8ec81dbb495765.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledWrapper = styled.div`\n  text-align: justify;\n  padding: 30px;\n  overflow: auto;\n  \n h2 {\n    font-size: 20px;\n    color: red;\n    padding-right: 130px;\n  }\n\n  h3 {\n    font-size: 18px;\n  }\n\n  h2::first-letter {\n    font-size: 50px;\n    font-weight: 700;\n  }\n\n  table tbody tr td:nth-child(2) {\n    padding-left: 40px;\n  }\n`;\n\nconst FaqModal = ({  getId: { id, title, subtitle, text } }) => {\n\n    return (\n        <StyledWrapper>\n            <h2>{title}</h2>\n            <div dangerouslySetInnerHTML={{ __html: subtitle }} />\n            <div dangerouslySetInnerHTML={{ __html: text }} />\n        </StyledWrapper>\n    )\n}\n\n\nexport default FaqModal;","import React from \"react\";\nimport styled from \"styled-components\";\nimport FaqModal from './FaqModal'\n\n\nconst ModalWrapper = styled.div`\n  border-left: 10px solid red;\n  z-index: 999;\n  position: fixed;\n  display: flex;\n\n  flex-direction: column;\n  right: 0;\n  top: 0;\n  height: 100vh;\n  width: 91vw;\n  background-color: white;\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\n  transform: translate(${({ isVisible }) => (isVisible ? \"0\" : \"100%\")});\n  transition: transform 0.5s ease-in-out;\n`;\n\nconst StyledButton = styled.button`\n  width: 30px;\n  background-color: green;\n`;\n\nconst Modal = ({ openModal, setOpenModal, getId }) => {\n\n  return (\n    <ModalWrapper isVisible={openModal}>\n      <FaqModal \n          getId={getId}\n      />\n      <StyledButton onClick={()=>setOpenModal(false)}>x</StyledButton>\n    </ModalWrapper>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"../Modal/Modal\";\n\nconst StyledWrapper = styled.div`\n  text-align: justify;\n  \n  \n h2 {\n    font-size: 20px;\n    color: red;\n    padding-right: 130px;\n  }\n\n  h3 {\n    font-size: 18px;\n  }\n\n  h2::first-letter {\n    font-size: 50px;\n    font-weight: 700;\n  }\n\n  table tbody tr td:nth-child(2) {\n    padding-left: 40px;\n  }\n`;\n\nconst StyledButton = styled.button`\n  padding:0;\n  margin:0;\n  border: none;\n  background-color:white;\n  height: 40px;\n\n  :hover {\n    box-shadow: 0 10px 30px -10px hsla(100, 0%, 0%, 0.5);\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n    img {\n      width: 50px;\n      \n      box-shadow: 0 10px 30px -10px hsla(100, 0%, 0%, 0.15);\n      border-radius: 2px;\n    }\n`;\n\n\nconst StyledBlock = styled.div`\n  width:100%;\n  display: flex;\n  flex-grow:2;\n  justify-items:center;\n\n h2 {\n   width:100%;\n    font-size: 20px;\n    color: blueviolet;\n    margin-left: 50px;\n    padding: 0 10px 0 0;\n  }\n\n`;\n\nconst FaqDetails = ({setOpenModal,getId, setData, openModal, id, text, title, subtitle, picture }) => {\n\n\n  return (\n    <StyledWrapper key={id}>\n    <StyledBlock>\n      <StyledButton onClick={() => setData({id,title,subtitle,text})}>\n        <img src={picture.fixed.src} alt=\"logo ksiazki\" />\n      </StyledButton>\n\n        <h2>{title}</h2>\n    </StyledBlock>\n\n      <div dangerouslySetInnerHTML={{ __html: subtitle }} />\n    \n      <Modal\n        openModal={openModal}\n        setOpenModal={setOpenModal} \n        getId={getId}\n        />\n    </StyledWrapper>\n  );\n};\n\nexport default FaqDetails;\n","import React, { useState } from \"react\";\nimport { graphql } from 'gatsby';\nimport styled from \"styled-components\";\nimport FaqDetails from \"../components/Faq/FaqDetails\";\n\nconst StyledWrapper = styled.div`\n  padding: 150px 0 0 50px;\n  margin-right: 50px;\n  text-align: justify;\n  width: 50%;\n\n  h1 {\n    font-size: 25px;\n    color: red;\n    margin: 50px 0 30px 0;\n  }\n\n`;\n\nconst FaqPage = ( {data: { allDatoCmsFaq: { nodes } } }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [getId, setGetId] = useState({});\n\n  const setData = (x) => {\n    setGetId(x)\n    setOpenModal(!openModal)\n  }\n\n    return (\n    <StyledWrapper>\n      <h1>FAQ, Komentarze, Pytania i Wszystko Do Kupy</h1>\n\n      {nodes.map(({ id, slug, title,text, subtitle, picture }) => \n         <FaqDetails \n          key={id} \n          id={id} \n          title={title} \n          subtitle={subtitle} \n          text={text}\n          picture={picture} \n          slug={slug} \n          openModal={openModal} \n          setData={setData}\n          setOpenModal={setOpenModal}\n          getId={getId}\n         />      \n      )}\n    </StyledWrapper>\n\n  );\n};\n\nexport const query = graphql`\n  {\n    allDatoCmsFaq {\n      nodes {\n        id\n        title\n        subtitle\n        text\n        slug\n        picture {\n          fixed(width: 100) {\n            tracedSVG\n            src\n            sizes\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default FaqPage;\n"],"sourceRoot":""}